@using BlazorSurf.Shared
@using Blazored.Modal;
@using Blazored.Modal.Services;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

<div class="modal" id="myModal" style="display:block;" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered" >
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@SelectedItem.Name</h4>
                <button type="button" class="close" data-dismiss="modal"  @onclick=ModalCancel>&times;</button>
            </div>
            <div class="modal-body">
                <p>Name: @SelectedItem.Name</p>
                <p>Price: @SelectedItem.Price</p>

                <div>
                    Start dato
                    <input class="form-control" @bind="rentObject.StartRent" type="date" />

                    Slut dato
                    <input class="form-control" @bind="rentObject.EndRent" type="date" />
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick=@ModalOk > OK </button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] 
    public Board? SelectedItem { get; set; }
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }       
    private Rent rentObject = new(); 


    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }
    private Task ModalOk()
    {       
        return OnClose.InvokeAsync(true);
    }
}